name: PUPSIS-Schedule-Exporter Release

on:
  workflow_dispatch: # Trigger workflow manually via the GitHub UI

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: write

    name: Build packages
    runs-on: ubuntu-latest

    steps:

      # Checkout the repository
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # ALWAYS CHECK THE VERSION ON dist/version FILE BEFORE RUNNING THIS WORKFLOW    
      # Get the version from dist/version file
      - name: Get version from dist/version
        id: release_info
        run: |
          VERSION=$(cat web-extension/dist/version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Check if the version tag already exists
      - name: Check if tag exists
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "Tag already exists. Aborting."
            exit 1
          fi

      # Build the release notes
      - name: Assemble release notes
        run: |
          touch release.body.txt
          grep -m1 -B10000 -- "----------" CHANGELOG.md >> release.body.txt
          sed -e 's/%version%/${{ env.VERSION }}/g' RELEASE.md >> release.body.txt

      # Create a GitHub release
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.VERSION }}"  # Prefixed with "v" for versioning
          release_name: ${{ env.VERSION }}
          draft: false  # This makes it an official release
          prerelease: true  # Ensure it is not a prerelease
          body_path: release.body.txt

      # Install dependencies and build the packages
      - name: Install dependencies and build the packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
          cd web-extension
          make publish 

      # Upload Chrome package
      - name: Upload Chrome package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: web-extension/dist/build/PUPSIS-Schedule-Exporter-${{ env.VERSION }}-chrome.zip
          asset_name: PUPSIS-Schedule-Exporter-${{ env.VERSION }}-chromium.zip
          asset_content_type: application/octet-stream

      # Upload Firefox package
      - name: Upload Firefox package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: web-extension/dist/build/PUPSIS-Schedule-Exporter-${{ env.VERSION }}-firefox-mv2.xpi
          asset_name: PUPSIS-Schedule-Exporter-${{ env.VERSION }}-firefox-mv2.xpi
          asset_content_type: application/octet-stream

      # Upload MS-EDGE package
      - name: Upload MS-EDGE package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: web-extension/dist/build/PUPSIS-Schedule-Exporter-${{ env.VERSION }}-edge.zip
          asset_name: PUPSIS-Schedule-Exporter-${{ env.VERSION }}-edge.zip
          asset_content_type: application/octet-stream
