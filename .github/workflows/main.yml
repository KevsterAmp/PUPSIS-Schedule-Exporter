name: PUPSIS-Schedule-Exporter Release

on:
  push:
    branches:
      - main  # Triggers on push to the main branch

permissions:
  contents: write  # Necessary for creating releases and pushing contents

jobs:
  build:
    name: Build and Release Extension
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Install dependencies and build the extension packages
      - name: Install dependencies and build the packages
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
          make publish  # Running your make publish command which generates multiple files

      # Step 3: Create a GitHub release
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}  # Using the commit SHA as the tag name if no tags are created
          release_name: "Release ${{ github.sha }}"
          draft: false
          prerelease: false
          body_path: release.body.txt  # Optional file with release notes

      # Step 4: Upload all extension files as assets to the release
      - name: Upload Chrome Extension
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/build/*-chrome-*.zip  # Adjust to your Chrome output file pattern
          asset_name: chrome_extension.zip
          asset_content_type: application/zip

      - name: Upload Edge Extension
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/build/*-edge-*.zip  # Adjust to your Edge output file pattern
          asset_name: edge_extension.zip
          asset_content_type: application/zip

      - name: Upload Firefox MV2 Extension
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/build/*-firefox-mv2-*.xpi  # Adjust to your Firefox MV2 output file pattern
          asset_name: firefox-mv2-extension.xpi
          asset_content_type: application/zip

